# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
# 控制workflow的执行时机
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # 在master分支被push或pull_request时触发
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  # 允许你在Action tabs里手动执行这个workflow
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# 一个workflow由一个或多个jobs组成，他们可以串行或并行执行
jobs:
  # This workflow contains a single job called "build"
  # 这个workflow包含一个名为"build"的job
  build:
    # The type of runner that the job will run on
    # 这个job的运行环境，注意，这并不是你自己的服务器的环境，而是指定的当前这个job执行的脚本的运行环境，是github提供的虚拟机
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # Steps是一系列要执行的任务，他们属于job的一部分
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # 检出你的分支，GitHub提供的预设脚本
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      # 运行单行脚本
      # 每一步(step)可以有一个名字(name) 
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      # 运行多行脚本
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.


      # 安装node环境 这种通用的脚本在GitHub上都有现成的，可以直接去GitHub搜索
      # - name: Setup Node.js environment
      #   uses: actions/setup-node@v3.4.1
      #   with:
      #     node-version: "14.x" # 指定安装14版本node
      
      # - name: install deps
      #   run: npm install

      # - name: build app
      #   run: npm run buil

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASS }}
          port: 22
          source: "src/"
          target: ${{ secrets.REMOTE_TARGET }}
